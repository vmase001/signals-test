name: PR Compliance Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ["*"]

jobs:
  commit-message-check:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check commit messages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMITS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/commits")

          echo "$COMMITS" | jq -r '.[].commit.message' | while read -r msg; do
            if [[ ! "$msg" =~ ^(feat|fix|docs|style|refactor|test|chore):\s.+$ ]]; then
              echo "❌ Invalid commit message: $msg"
              echo "ℹ️ Messages must follow: 'type: description' format (e.g., 'feat: add new feature')"
              exit 1
            fi
          done

  required-review:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check for required review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REVIEWS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/reviews")

          PR_AUTHOR="${{ github.event.pull_request.user.login }}"

          REVIEW_COUNT=$(echo "$REVIEWS" | jq --arg author "$PR_AUTHOR" \
            '[.[] | select(.state == "APPROVED" and .user.login != $author)] | unique_by(.user.login) | length')

          if [ "$REVIEW_COUNT" -lt 1 ]; then
            echo "❌ At least one approval required from other developers"
            exit 1
          else
            echo "✅ $REVIEW_COUNT valid approval(s) found"
          fi
